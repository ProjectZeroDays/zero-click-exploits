import requests
import logging

logging.basicConfig(level=logging.ERROR)

class NetworkHandler:
    def __init__(self, config):
        self.config = config
        self.timeout = config['network']['timeout']
        self.retries = config['network']['retries']
        self.user_agent = config['network']['user_agent']

    def send_request(self, url, data=None, method='GET'):
        headers = {'User-Agent': self.user_agent}
        for attempt in range(self.retries):
            try:
                if method == 'GET':
                    response = requests.get(url, timeout=self.timeout, headers=headers)
                elif method == 'POST':
                    response = requests.post(url, data=data, timeout=self.timeout, headers=headers)
                response.raise_for_status()
                return response.text
            except requests.exceptions.RequestException as e:
                logging.error(f"Error sending request to {url}, attempt {attempt + 1}: {e}")
        logging.error(f"Failed to send request to {url} after {self.retries} attempts.")
        return None

def create_network_handler(config):
    return NetworkHandler(config)
