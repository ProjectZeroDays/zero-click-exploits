import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from cryptography.fernet import Fernet

class PrivateMessaging:
    def __init__(self, smtp_server, smtp_port, smtp_user, smtp_password):
        self.smtp_server = smtp_server
        self.smtp_port = smtp_port
        self.smtp_user = smtp_user
        self.smtp_password = smtp_password
        self.encryption_key = Fernet.generate_key()
        self.cipher = Fernet(self.encryption_key)

    def send_message(self, to_email, subject, message):
        encrypted_message = self.encrypt_message(message)
        msg = MIMEMultipart()
        msg['From'] = self.smtp_user
        msg['To'] = to_email
        msg['Subject'] = subject
        msg.attach(MIMEText(encrypted_message, 'plain'))

        try:
            with smtplib.SMTP(self.smtp_server, self.smtp_port) as server:
                server.starttls()
                server.login(self.smtp_user, self.smtp_password)
                server.sendmail(self.smtp_user, to_email, msg.as_string())
                print("Message sent successfully!")
        except Exception as e:
            print(f"Failed to send message: {e}")

    def receive_message(self, encrypted_message):
        decrypted_message = self.decrypt_message(encrypted_message)
        return decrypted_message

    def encrypt_message(self, message):
        return self.cipher.encrypt(message.encode()).decode()

    def decrypt_message(self, encrypted_message):
        return self.cipher.decrypt(encrypted_message.encode()).decode()
