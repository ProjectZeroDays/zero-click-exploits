import logging

class LogHandler:
    def __init__(self, log_file):
        self.logger = logging.getLogger(__name__)
        self.logger.setLevel(logging.INFO)
        handler = logging.FileHandler(log_file)
        handler.setLevel(logging.INFO)
        formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
        handler.setFormatter(formatter)
        self.logger.addHandler(handler)

    def log_event(self, event_type, event_details):
        if event_type == 'INFO':
            self.logger.info(event_details)
        elif event_type == 'WARNING':
            self.logger.warning(event_details)
        elif event_type == 'ERROR':
            self.logger.error(event_details)
        else:
            self.logger.debug(event_details)

    def example_usage(self):
        self.log_event('INFO', 'This is an info message')
        self.log_event('WARNING', 'This is a warning message')
        self.log_event('ERROR', 'This is an error message')
        self.log_event('DEBUG', 'This is a debug message')

if __name__ == "__main__":
    log_handler = LogHandler('system-logs.log')
    log_handler.example_usage()
