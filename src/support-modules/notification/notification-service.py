import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import logging

class NotificationService:
    def __init__(self, smtp_server, smtp_port, smtp_user, smtp_password):
        self.smtp_server = smtp_server
        self.smtp_port = smtp_port
        self.smtp_user = smtp_user
        self.smtp_password = smtp_password
        self.logger = logging.getLogger(__name__)
        self.logger.setLevel(logging.INFO)
        handler = logging.FileHandler('notification_service.log')
        handler.setLevel(logging.INFO)
        formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
        handler.setFormatter(formatter)
        self.logger.addHandler(handler)

    def send_email(self, recipient, subject, body):
        msg = MIMEMultipart()
        msg['From'] = self.smtp_user
        msg['To'] = recipient
        msg['Subject'] = subject

        msg.attach(MIMEText(body, 'plain'))

        try:
            with smtplib.SMTP(self.smtp_server, self.smtp_port) as server:
                server.starttls()
                server.login(self.smtp_user, self.smtp_password)
                server.sendmail(self.smtp_user, recipient, msg.as_string())
                self.logger.info(f"Email sent to {recipient}")
        except Exception as e:
            self.logger.error(f"Failed to send email: {e}")

    def log_notification(self, notification_type, recipient, subject):
        self.logger.info(f"Notification sent: Type={notification_type}, Recipient={recipient}, Subject={subject}")

    def example_usage(self):
        self.send_email('test@example.com', 'Test Subject', 'This is a test email.')
        self.log_notification('Email', 'test@example.com', 'Test Subject')

if __name__ == "__main__":
    notification_service = NotificationService('smtp.example.com', 587, 'user@example.com', 'password')
    notification_service.example_usage()
