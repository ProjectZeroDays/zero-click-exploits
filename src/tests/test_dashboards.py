import unittest
from src.custom_dashboards import CustomDashboards

class TestCustomDashboards(unittest.TestCase):
    def setUp(self):
        self.dashboards = CustomDashboards()

    def test_mitm_stingray_dashboard(self):
        dashboard = self.dashboards.render("MITM Stingray")
        self.assertIn("MITM Stingray Dashboard", str(dashboard))

    def test_device_fingerprinting_dashboard(self):
        dashboard = self.dashboards.render("Device Fingerprinting")
        self.assertIn("Device Fingerprinting Dashboard", str(dashboard))

    def test_advanced_social_engineering_dashboard(self):
        dashboard = self.dashboards.render("Advanced Social Engineering")
        self.assertIn("Advanced Social Engineering Dashboard", str(dashboard))

    def test_zero_day_exploits_dashboard(self):
        dashboard = self.dashboards.render("Zero-Day Exploits")
        self.assertIn("Zero-Day Exploits Dashboard", str(dashboard))

    def test_advanced_malware_analysis_dashboard(self):
        dashboard = self.dashboards.render("Advanced Malware Analysis")
        self.assertIn("Advanced Malware Analysis Dashboard", str(dashboard))

    def test_network_exploitation_dashboard(self):
        dashboard = self.dashboards.render("Network Exploitation")
        self.assertIn("Network Exploitation Dashboard", str(dashboard))

    def test_wireless_exploitation_dashboard(self):
        dashboard = self.dashboards.render("Wireless Exploitation")
        self.assertIn("Wireless Exploitation Dashboard", str(dashboard))

    def test_cloud_exploitation_dashboard(self):
        dashboard = self.dashboards.render("Cloud Exploitation")
        self.assertIn("Cloud Exploitation Dashboard", str(dashboard))

    def test_iot_exploitation_dashboard(self):
        dashboard = self.dashboards.render("IoT Exploitation")
        self.assertIn("IoT Exploitation Dashboard", str(dashboard))

    def test_apts_dashboard(self):
        dashboard = self.dashboards.render("APTs")
        self.assertIn("APTs Dashboard", str(dashboard))

    def test_real_time_threat_intelligence_dashboard(self):
        dashboard = self.dashboards.render("Real-Time Threat Intelligence")
        self.assertIn("Real-Time Threat Intelligence Dashboard", str(dashboard))

    def test_predictive_analytics_dashboard(self):
        dashboard = self.dashboards.render("Predictive Analytics")
        self.assertIn("Predictive Analytics Dashboard", str(dashboard))

    def test_automated_incident_response_dashboard(self):
        dashboard = self.dashboards.render("Automated Incident Response")
        self.assertIn("Automated Incident Response Dashboard", str(dashboard))

    def test_ai_red_teaming_dashboard(self):
        dashboard = self.dashboards.render("AI Red Teaming")
        self.assertIn("AI Red Teaming Dashboard", str(dashboard))

    def test_blockchain_logger_dashboard(self):
        dashboard = self.dashboards.render("Blockchain Logger")
        self.assertIn("Blockchain Logger Dashboard", str(dashboard))

    def test_alerts_notifications_dashboard(self):
        dashboard = self.dashboards.render("Alerts and Notifications")
        self.assertIn("Alerts and Notifications Dashboard", str(dashboard))

    def test_data_exfiltration_dashboard(self):
        dashboard = self.dashboards.render("Data Exfiltration")
        self.assertIn("Data Exfiltration Dashboard", str(dashboard))

    def test_data_visualization_dashboard(self):
        dashboard = self.dashboards.render("Data Visualization")
        self.assertIn("Data Visualization Dashboard", str(dashboard))

    def test_exploit_payloads_dashboard(self):
        dashboard = self.dashboards.render("Exploit Payloads")
        self.assertIn("Exploit Payloads Dashboard", str(dashboard))

    def test_fuzzing_engine_dashboard(self):
        dashboard = self.dashboards.render("Fuzzing Engine")
        self.assertIn("Fuzzing Engine Dashboard", str(dashboard))

    def test_vulnerability_scanner_dashboard(self):
        dashboard = self.dashboards.render("Vulnerability Scanner")
        self.assertIn("Vulnerability Scanner Dashboard", str(dashboard))

    def test_c2_dashboard(self):
        dashboard = self.dashboards.render("C2 Dashboard")
        self.assertIn("Command and Control Dashboard", str(dashboard))

    def test_adware_manager_dashboard(self):
        dashboard = self.dashboards.render("Adware Manager")
        self.assertIn("Adware Manager Dashboard", str(dashboard))

    def test_ai_integration_dashboard(self):
        dashboard = self.dashboards.render("AI Integration")
        self.assertIn("AI Integration Dashboard", str(dashboard))

    def test_deployment_manager_dashboard(self):
        dashboard = self.dashboards.render("Deployment Manager")
        self.assertIn("Deployment Manager Dashboard", str(dashboard))

    def test_advanced_decryption_dashboard(self):
        dashboard = self.dashboards.render("Advanced Decryption")
        self.assertIn("Advanced Decryption Dashboard", str(dashboard))

    def test_android_exploit_dashboard(self):
        dashboard = self.dashboards.render("Android Exploit")
        self.assertIn("Android Exploit Dashboard", str(dashboard))

    def test_apt_simulation_dashboard(self):
        dashboard = self.dashboards.render("APT Simulation")
        self.assertIn("APT Simulation Dashboard", str(dashboard))

    def test_botnet_manager_dashboard(self):
        dashboard = self.dashboards.render("Botnet Manager")
        self.assertIn("Botnet Manager Dashboard", str(dashboard))

    def test_deepseek_cody_integration_dashboard(self):
        dashboard = self.dashboards.render("DeepSeek Cody Integration")
        self.assertIn("DeepSeek Cody Integration Dashboard", str(dashboard))

    def test_dns_manager_dashboard(self):
        dashboard = self.dashboards.render("DNS Manager")
        self.assertIn("DNS Manager Dashboard", str(dashboard))

    def test_download_manager_dashboard(self):
        dashboard = self.dashboards.render("Download Manager")
        self.assertIn("Download Manager Dashboard", str(dashboard))

    def test_identity_manager_dashboard(self):
        dashboard = self.dashboards.render("Identity Manager")
        self.assertIn("Identity Manager Dashboard", str(dashboard))

    def test_ios_exploit_dashboard(self):
        dashboard = self.dashboards.render("iOS Exploit")
        self.assertIn("iOS Exploit Dashboard", str(dashboard))

    def test_linux_exploit_dashboard(self):
        dashboard = self.dashboards.render("Linux Exploit")
        self.assertIn("Linux Exploit Dashboard", str(dashboard))

    def test_machine_learning_ai_dashboard(self):
        dashboard = self.dashboards.render("Machine Learning AI")
        self.assertIn("Machine Learning AI Dashboard", str(dashboard))

    def test_macos_exploit_dashboard(self):
        dashboard = self.dashboards.render("MacOS Exploit")
        self.assertIn("MacOS Exploit Dashboard", str(dashboard))

    def test_proxy_chain_manager_dashboard(self):
        dashboard = self.dashboards.render("Proxy Chain Manager")
        self.assertIn("Proxy Chain Manager Dashboard", str(dashboard))

    def test_real_time_monitoring_dashboard(self):
        dashboard = self.dashboards.render("Real-Time Monitoring")
        self.assertIn("Real-Time Monitoring Dashboard", str(dashboard))

    def test_self_healing_ai_manager_dashboard(self):
        dashboard = self.dashboards.render("Self-Healing AI Manager")
        self.assertIn("Self-Healing AI Manager Dashboard", str(dashboard))

    def test_session_management_dashboard(self):
        dashboard = self.dashboards.render("Session Management")
        self.assertIn("Session Management Dashboard", str(dashboard))

    def test_settings_manager_dashboard(self):
        dashboard = self.dashboards.render("Settings Manager")
        self.assertIn("Settings Manager Dashboard", str(dashboard))

    def test_threat_intelligence_dashboard(self):
        dashboard = self.dashboards.render("Threat Intelligence")
        self.assertIn("Threat Intelligence Dashboard", str(dashboard))

    def test_troubleshooting_manager_dashboard(self):
        dashboard = self.dashboards.render("Troubleshooting Manager")
        self.assertIn("Troubleshooting Manager Dashboard", str(dashboard))

    def test_vscode_dashboard_manager_dashboard(self):
        dashboard = self.dashboards.render("VSCode Dashboard Manager")
        self.assertIn("VSCode Dashboard Manager Dashboard", str(dashboard))

    def test_windows_exploit_dashboard(self):
        dashboard = self.dashboards.render("Windows Exploit")
        self.assertIn("Windows Exploit Dashboard", str(dashboard))

if __name__ == "__main__":
    unittest.main()
