import os

class Config:
    SECRET_KEY = os.environ.get('SECRET_KEY')
    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL')
    SQLALCHEMY_TRACK_MODIFICATIONS = False

    # AI-driven vulnerability scanning and exploit modifications
    AI_VULNERABILITY_SCANNING_ENABLED = os.environ.get('AI_VULNERABILITY_SCANNING_ENABLED', 'True') == 'True'
    AI_EXPLOIT_MODIFICATIONS_ENABLED = os.environ.get('AI_EXPLOIT_MODIFICATIONS_ENABLED', 'True') == 'True'

    # Multi-factor authentication (MFA) and encryption methods
    MFA_ENABLED = os.environ.get('MFA_ENABLED', 'True') == 'True'
    ENCRYPTION_METHOD = os.environ.get('ENCRYPTION_METHOD', 'AES-256')

    # Blockchain-based logging systems
    BLOCKCHAIN_LOGGING_ENABLED = os.environ.get('BLOCKCHAIN_LOGGING_ENABLED', 'True') == 'True'
    BLOCKCHAIN_LOGGING_NODE = os.environ.get('BLOCKCHAIN_LOGGING_NODE', 'http://localhost:8545')

    # Advanced encryption methods
    ADVANCED_ENCRYPTION_METHODS = os.environ.get('ADVANCED_ENCRYPTION_METHODS', 'AES-256,ChaCha20,RSA').split(',')

    # Regular security audits and penetration testing
    SECURITY_AUDITS_ENABLED = os.environ.get('SECURITY_AUDITS_ENABLED', 'True') == 'True'
    PENETRATION_TESTING_ENABLED = os.environ.get('PENETRATION_TESTING_ENABLED', 'True') == 'True'

    # API Key and Secret for production
    API_KEY = os.environ.get('API_KEY')
    API_SECRET = os.environ.get('API_SECRET')
