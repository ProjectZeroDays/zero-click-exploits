# Install libtk8.6 and Other Dependencies
RUN apt-get update && apt-get install -y libtk8.6 libnss3 libxss1 libasound2 libx11-xcb1 libxcomposite1 libxcursor1 libxdamage1 libxi6 libxtst6 libappindicator1 libxrandr2 libatk1.0-0 libatk-bridge2.0-0 libgtk-3-0 libgbm1 libpango1.0-0 libxkbcommon0 libxshmfence1 libx11-6 libxcb1 libxext6 libxfixes3 libxrender1

# Set Environment Variables For Hugging Face Code Spaces 
ENV HF_API_TOKEN=${HF_API_TOKEN}
ENV HF_PROJECT_NAME=${HF_PROJECT_NAME}

# Install Python Dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy The Source Files
COPY src ./src
COPY config ./config
COPY data ./data

# Set The Working Directory
WORKDIR /app

# Run The Application
CMD ["python3", "src/app.py"]

# Automated Deployment and Scaling
RUN apt-get update && apt-get install -y docker.io
COPY infra/k8s/deployment.yaml /app/infra/k8s/deployment.yaml
COPY infra/test_deployment.sh /app/infra/test_deployment.sh
RUN chmod +x /app/infra/test_deployment.sh
CMD ["/app/infra/test_deployment.sh"]

# Add configurations for AI-driven features and security measures
ENV AI_VULNERABILITY_SCANNING_ENABLED=True
ENV AI_EXPLOIT_MODIFICATIONS_ENABLED=True
ENV MFA_ENABLED=True
ENV ENCRYPTION_METHOD=AES-256

# Add configurations for blockchain-based logging systems
ENV BLOCKCHAIN_LOGGING_ENABLED=True
ENV BLOCKCHAIN_LOGGING_NODE=http://localhost:8545

# Add API_KEY and API_SECRET environment variables
ENV API_KEY=${API_KEY}
ENV API_SECRET=${API_SECRET}

# Add error handling and logging mechanisms for deployment steps
RUN apt-get update && apt-get install -y curl
COPY infra/error_handling.sh /app/infra/error_handling.sh
RUN chmod +x /app/infra/error_handling.sh
CMD ["/app/infra/error_handling.sh"]

# Add a step to verify the presence of required environment variables
RUN test -n "$HF_API_TOKEN" || (echo "HF_API_TOKEN is not set" && exit 1)
RUN test -n "$HF_PROJECT_NAME" || (echo "HF_PROJECT_NAME is not set" && exit 1)
RUN test -n "$API_KEY" || (echo "API_KEY is not set" && exit 1)
RUN test -n "$API_SECRET" || (echo "API_SECRET is not set" && exit 1)